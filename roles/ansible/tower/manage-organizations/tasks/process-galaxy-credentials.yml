---
- name: 'Get the existing galaxy_credentials'
  rest_get:
    host_url: '{{ ansible_tower.url | default(default_ansible_tower_url) }}'
    rest_user: '{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}'
    rest_password: '{{ ansible_tower.admin_password }}'
    api_uri: '/api/v2/organizations/{{ organization_id }}/galaxy_credentials/'
  register: r_existing_galaxy_credentials

- name: 'Set galaxy_credentials fact'
  set_fact:
    existing_galaxy_credentials: '{{ r_existing_galaxy_credentials.rest_output | default([]) }}'
    galaxy_credential_associated: false

- name: 'Check if galaxy credential is already associated with organization'
  set_fact:
    galaxy_credential_associated: true
  when:
    - item.name|trim == galaxy_credential_name|trim
  with_items:
    - '{{ existing_galaxy_credentials }}'

- name: "Get all existing credentials"
  rest_get:
    host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
    rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    rest_password: "{{ ansible_tower.admin_password }}"
    api_uri: "/api/v2/credentials/"
  register: existing_credentials

- name: 'Check if galaxy credential already exists globally'
  set_fact:
    galaxy_credential_exists: true
    galaxy_credential_id: "{{ item.id | int }}"
  when:
    - item.name|trim == galaxy_credential_name|trim
  with_items:
    - '{{ existing_credentials.rest_output }}'

# POST create new galaxy credential
- name: 'Load up new galaxy credential'
  uri:
    url: '{{ ansible_tower.url | default(default_ansible_tower_url) }}/api/v2/organizations/{{ organization_id }}/galaxy_credentials'
    user: '{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}'
    password: '{{ ansible_tower.admin_password }}'
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'galaxy_credential.j2') }}"
    body_format: 'json'
    headers:
      Content-Type: 'application/json'
      Accept: 'application/json'
    validate_certs: '{{ ansible_tower.validate_certs | default(validate_tower_certs) | default(true) }}'
    status_code: 201
  when:
    - galaxy_credential_exists is false

# POST associate new galaxy credential
- name: 'Associate existing credential with organization'
  uri:
    url: '{{ ansible_tower.url | default(default_ansible_tower_url) }}/api/v2/organizations/{{ organization_id }}/galaxy_credentials/'
    user: '{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}'
    password: '{{ ansible_tower.admin_password }}'
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'associate_galaxy_credential.j2') }}"
    body_format: 'json'
    headers:
      Content-Type: 'application/json'
      Accept: 'application/json'
    validate_certs: '{{ ansible_tower.validate_certs | default(validate_tower_certs) | default(true) }}'
    status_code: 204
  when:
    - galaxy_credential_id is defined
    - galaxy_credential_associated is false
